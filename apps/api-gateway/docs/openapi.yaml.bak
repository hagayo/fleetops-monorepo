openapi: 3.0.3
info:
  title: FleetOps API
  version: 0.1.0
  description: >
    API for FleetOps simulator. Provides robots, missions, stats, health and server-sent events.
servers:
  - url: http://127.0.0.1:4330
    description: Local API gateway
tags:
  - name: Health
  - name: Robots
  - name: Missions
  - name: Stats
  - name: Events
paths:
  /healthz:
    get:
      tags: [Health]
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          $ref: "#/components/responses/ServerError"

  /robots:
    get:
      tags: [Robots]
      summary: List robots
      parameters:
        - in: query
          name: status
          schema:
            $ref: "#/components/schemas/RobotStatus"
          required: false
          description: Filter by robot status
        - in: query
          name: reassignable
          schema:
            type: boolean
          required: false
          description: Filter by whether the robot can be reassigned
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RobotListResponse"
        "500":
          $ref: "#/components/responses/ServerError"

  /robots/{id}:
    get:
      tags: [Robots]
      summary: Get a robot by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RobotResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /robots/{id}/cancel:
    post:
      tags: [Robots]
      summary: Cancel the current robot mission and force return-to-base
      description: >
        - Always transitions the robot to returning_to_base.
        - If cancel reason is battery or hardware, robot becomes non-reassignable until recovered.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelRequest"
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptedResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "500":
          $ref: "#/components/responses/ServerError"

  /missions:
    get:
      tags: [Missions]
      summary: List missions
      parameters:
        - in: query
          name: status
          required: false
          schema:
            $ref: "#/components/schemas/MissionStatus"
          description: Filter by mission status
        - in: query
          name: page
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissionListResponse"
        "500":
          $ref: "#/components/responses/ServerError"

  /missions/{id}:
    get:
      tags: [Missions]
      summary: Get a mission by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissionResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /stats:
    get:
      tags: [Stats]
      summary: Get aggregate mission stats
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
        "500":
          $ref: "#/components/responses/ServerError"

  /events:
    get:
      tags: [Events]
      summary: Server-sent events stream
      description: >
        Emits `mission.created`, `mission.updated`, `robot.updated`, and `stats.updated` events.
        This endpoint uses the `text/event-stream` content type and is intended for browsers or SSE clients.
      responses:
        "200":
          description: Event stream
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-sent events payload stream
        "500":
          $ref: "#/components/responses/ServerError"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  schemas:
    HealthResponse:
      type: object
      required: [ok]
      properties:
        ok:
          type: boolean
          example: true

    ErrorResponse:
      type: object
      required: [success, message]
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: server error

    AcceptedResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            accepted:
              type: boolean
              example: true
            robotId:
              type: string
              format: uuid

    RobotStatus:
      type: string
      enum:
        - idle
        - assigned
        - en_route
        - delivering
        - returning_to_base
        - charging
        - maintenance

    CancelReason:
      type: string
      enum: [user, battery, hardware, blocked_path, system]

    MissionStatus:
      type: string
      enum:
        - pending
        - assigned
        - en_route
        - delivering
        - completed
        - failed
        - canceled

    MissionHistoryItem:
      type: object
      required: [status, at]
      properties:
        status:
          type: string
        at:
          type: string
          format: date-time
        note:
          type: string
          nullable: true

    Robot:
      type: object
      required: [id, status, batteryPct, reassignable, updatedAt]
      properties:
        id:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/RobotStatus"
        batteryPct:
          type: number
          format: float
          minimum: 0
          maximum: 100
        currentMissionId:
          type: string
          format: uuid
          nullable: true
        reassignable:
          type: boolean
        lastError:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time

    Mission:
      type: object
      required: [id, status, createdAt, updatedAt]
      properties:
        id:
          type: string
          format: uuid
        robotId:
          type: string
          format: uuid
          nullable: true
        status:
          $ref: "#/components/schemas/MissionStatus"
        cancelReason:
          allOf:
            - $ref: "#/components/schemas/CancelReason"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        history:
          type: array
          items:
            $ref: "#/components/schemas/MissionHistoryItem"

    Stats:
      type: object
      required: [completed, failed, active]
      properties:
        completed:
          type: integer
          minimum: 0
        failed:
          type: integer
          minimum: 0
        active:
          type: integer
          minimum: 0

    PaginatedMeta:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
        totalPages:
          type: integer
          minimum: 0

    RobotListResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: "#/components/schemas/Robot"

    RobotResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: "#/components/schemas/Robot"

    MissionListResponse:
      type: object
      required: [success, data, meta]
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: "#/components/schemas/Mission"
        meta:
          $ref: "#/components/schemas/PaginatedMeta"

    MissionResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: "#/components/schemas/Mission"

    StatsResponse:
      type: object
      required: [success, data]
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: "#/components/schemas/Stats"
